@model CapaEntidades.EntUsuario

@{
    ViewBag.Title = "ActualizarUsuario";
}

<h2>Actualizar usuario.</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div>@Html.ActionLink("Regresar a la lista de usuarios.", "ListaUsuarios")</div>

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.IdUsuario)
        @if (ViewBag.existeCorreo != null)
        {
            <p class="text-danger">@ViewBag.existeCorreo</p>
        }

        <div class="form-group">            
            @Html.LabelFor(m => m.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.APaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.APaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.APaterno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.AMaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.AMaterno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Contrasena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Contrasena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>

    </div>
}